version: "3.9" #docker-composeのバージョン指定。今は3系。1や2だと書式変わったりするみたい。マイナーバージョンは確認せよ。
services: #サービスにはコンテナがアタッチされる。サービスの実態はコンテナ。今回はコンテナ3つ建てる。
  app: #名前は任意。今回はappという名前でLaravelを入れるコンテナにする
    build: #dockerfileの場所を指定してビルドする
      context: .
      dockerfile: ./infra/php/Dockerfile
    restart: always #おまじない（毎回コンテナを再起動する設定らしい）
    volumes: #作業ディレクトリの共有設定。左がホスト、右がコンテナ内
      - ./backend:/work
    working_dir: /work

  web: #nginxのコンテナ
    build:
      context: .
      dockerfile: ./infra/nginx/Dockerfile
    restart: always
    ports: #ポートフォワードの設定。左がホスト、右がコンテナ。ホストから8080番でアクセスすればコンテナのデフォルト設定の80番にアクセスする。
      - 8080:80
    volumes:
      - ./backend:/work
      - ./infra/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
    working_dir: /work

  db: #dbのコンテナ
    build: ./infra/mysql
    restart: always
    volumes:
      - db-store:/var/lib/mysql #./などのパス指定なしで書いたら名前つきボリュームと認定される。永続データを持つコンテナ(主にDB)で使用。
    ports:
      - 33060:3306 #ポート被りをケア。左がホストだからDBツールで見るときは33060を指定する。

volumes: #名前つきボリュームを指定。コンテナ削除しても消えない永続データを持ちたい時に指定する
  db-store: #名前は任意。この名前はdbコンテナのvolume設定のところで使用する。